# Comments: use '#' for comment lines and ';' (following a space) for inline comments

[INCLUDES]

before = paths-debian.conf

[DEFAULT]

ignorself = true
ignoreip = 127.0.0.1/8 ::1 ; I have my own IP here too

ignorecommand =

bantime  = 1h
findtime  = 10m
maxretry = 2

backend = auto
usedns = warn
logencoding = auto

enabled = false

mode = normal
filter = %(__name__)s[mode=%(mode)s]

# ACTIONS

destemail = admin@root  ; or real email
sender = ban@<host>
mta = sendmail          ; must be sendmail or mail
protocol = tcp

chain = <known/chain>
port = 0:65535

fail2ban_agent = Fail2Ban/%(fail2ban_version)s

# Action shortcuts. To be used to define action parameter

banaction = iptables-multiport
banaction_allports = iptables-allports

# The simplest action to take: ban only
action_ = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]

# ban & send an e-mail with whois report to the destemail.
action_mw = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
            %(mta)s-whois[name=%(__name__)s, sender="%(sender)s", dest="%(destemail)s", protocol="%(protocol)s", chain="%(chain)s"]

# ban & send an e-mail with whois report and relevant log lines to the destemail.
action_mwl = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
             %(mta)s-whois-lines[name=%(__name__)s, sender="%(sender)s", dest="%(destemail)s", logpath=%(logpath)s, chain="%(chain)s"]

# ban & send a xarf e-mail to abuse contact of IP address and include relevant log lines to the destemail.
action_xarf = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
             xarf-login-attack[service=%(__name__)s, sender="%(sender)s", logpath=%(logpath)s, port="%(port)s"]

# ban IP on CloudFlare & send an e-mail with whois report and relevant log lines to the destemail.
action_cf_mwl = cloudflare[cfuser="%(cfemail)s", cftoken="%(cfapikey)s"]
                %(mta)s-whois-lines[name=%(__name__)s, sender="%(sender)s", dest="%(destemail)s", logpath=%(logpath)s, chain="%(chain)s"]

# Report block via blocklist.de fail2ban reporting service API
action_blocklist_de  = blocklist_de[email="%(sender)s", service=%(filter)s, apikey="%(blocklist_de_apikey)s", agent="%(fail2ban_agent)s"]

# Report ban via badips.com, and use as blacklist
# NOTE: This action relies on banaction being present on start and therefore should be last action defined for a jail.
action_badips = badips.py[category="%(__name__)s", banaction="%(banaction)s", agent="%(fail2ban_agent)s"]

# Report ban via badips.com (uses action.d/badips.conf for reporting only)
action_badips_report = badips[category="%(__name__)s", agent="%(fail2ban_agent)s"]

# Report ban via abuseipdb.com..
action_abuseipdb = abuseipdb

# Choose default action.
action = %(action_mwl)s

# JAILS

[sshd]
mode   = normal
port    = ssh
logpath = %(sshd_log)s
backend = %(sshd_backend)s
bantime  = 48h
maxretry = 1
action = %(action_)s
enabled = true

[apache-auth]
port     = http,https
logpath  = %(apache_error_log)s
bantime = 24h
enabled = true

[apache-badbots]
# Ban hosts which agent identifies spammer robots crawling the web
# for email addresses. The mail outputs are buffered.
port     = http,https
logpath  = %(apache_access_log)s
bantime  = 48h
maxretry = 1

[apache-noscript]
port     = http,https
logpath  = %(apache_error_log)s
bantime = 24h
enabled = true

[apache-overflows]
port     = http,https
logpath  = %(apache_error_log)s
bantime = 24h
maxretry = 1
enabled = true

[apache-nohome]
port     = http,https
logpath  = %(apache_error_log)s
bantime = 24h
maxretry = 1
enabled = true

[apache-botsearch]
port     = http,https
logpath  = %(apache_error_log)s
bantime = 48h
maxretry = 1
enabled = true

[apache-fakegooglebot]
port     = http,https
logpath  = %(apache_access_log)s
bantime = 48h
maxretry = 1
ignorecommand = %(ignorecommands_dir)s/apache-fakegooglebot <ip>
enabled = true

[apache-modsecurity]
port     = http,https
logpath  = %(apache_error_log)s
bantime = 24h
maxretry = 1
enabled = true

[apache-shellshock]
port    = http,https
logpath = %(apache_error_log)s
bantime = 24h
maxretry = 1
enabled = true

# Protect against DOS attack
# 360 request in 2 min > Ban for 2 weeks
[http-get-dos]
port = http,https
filter = http-get-dos
logpath = /var/log/varnish/access.log
maxretry = 360
findtime = 2m
action = iptables[name=HTTP, port=http, protocol=tcp]
bantime = 14d
enabled = true

[php-url-fopen]
port    = http,https
logpath = %(apache_access_log)s
enabled = true

[suhosin]
port    = http,https
logpath = %(suhosin_log)s

[monit]
enabled = true
filter = monit
port = 2812
logpath = /var/log/monit*.log
bantime = 24h
maxretry = 2

[wordpress]
enabled = true
port = http,https
filter = wordpress
logpath = /var/log/apache2/access*.log
maxretry = 3
findtime = 30m
bantime = 48h

[wordpress-xml]
enabled = true
port = http,https
filter = wordpress-xml
logpath = /var/log/apache2/access*.log
maxretry = 1
findtime = 30m
bantime = 48h

[moodle]
enabled = true
port = http,https
filter = moodle
logpath = /var/log/apache2/access*.log
maxretry = 4
findtime = 15m
bantime = 1h
action = %(action_)s

[postfix]
# To use another modes set filter parameter "mode" in jail.local:
mode    = more
port    = smtp,465,submission
logpath = %(postfix_log)s
backend = %(postfix_backend)s
enabled = true

[postfix-rbl]
filter   = postfix[mode=rbl]
port     = smtp,465,submission
logpath  = %(postfix_log)s
backend  = %(postfix_backend)s
maxretry = 1
enabled = true

[postfix-sasl]
filter   = postfix[mode=auth]
port     = smtp,465,submission,imap,imaps,pop3,pop3s
logpath  = %(postfix_log)s
backend  = %(postfix_backend)s
enabled = true

[mysqld-auth]
port     = 3306
logpath  = %(mysql_log)s
backend  = %(mysql_backend)s

[phpmyadmin-syslog]
port    = http,https
logpath = %(syslog_authpriv)s
backend = %(syslog_backend)s
enabled = true

# 3 ban in 24 hour > Ban for 2 week
[multi-ban]
filter = ban
logpath = /var/log/fail2ban.log
maxretry = 3
findtime = 24h
action = iptables-tarpit[name=ALL]
bantime = 14d
enabled = true


# 3 multi-ban in 2 weeks > Ban for year
[multi-ban2]
filter = multiban
logpath = /var/log/fail2ban.log
maxretry = 3
findtime = 14d
action = iptables-tarpit[name=ALL]
         mail-whois-lines[name=%(__name__)s, dest=%(destemail)s, logpath=%(logpath)s]
bantime = 365d
enabled = true
